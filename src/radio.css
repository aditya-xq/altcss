/* radio.css - Sleek, Minimal, Modern Design */

/* Container structure:
    <div>
        <label>
            <input type="radio" name="radioGroup" value="option1">
            <span>Option 1</span>
        </label>
        
        <label>
            <input type="radio" name="radioGroup" value="option2">
            <span>Option 2</span>
        </label>
        
        <label>
            <input type="radio" name="radioGroup" value="option3" disabled>
            <span>Option 3 (Disabled)</span>
        </label>
        
        <label>
            <input type="radio" name="radioGroup" value="option4">
            <span>Option 4</span>
        </label>
    </div>
*/

/* Radio group container */
div:has(label > input[type="radio"]) {
    @apply flex flex-wrap w-full;
}

/* Style the label containing a radio input */
label:has(input[type="radio"]) {
    @apply relative flex items-center cursor-pointer pl-6 py-1 select-none bg-white dark:bg-black 
    text-gray-800 dark:text-gray-200 transition-colors duration-200 ease-in-out 
    border-gray-800 dark:border-gray-500;
    width: calc(50% - 0.75rem); /* 50% width minus half of the gap */
}

/* Hide the default radio button */
input[type="radio"] {
    @apply absolute opacity-0 h-0 w-0;
}

/* Disabled state */
input[type="radio"]:disabled ~ span {
    @apply opacity-50 cursor-not-allowed;
}

input[type="radio"]:disabled {
    @apply opacity-50 cursor-not-allowed;
}

/* Custom radio button (circle) */
label:has(input[type="radio"]):before {
    @apply absolute border rounded-full transition-colors duration-200 ease-in-out;
    content: '';
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    height: 1rem;
    width: 1rem;
}


/* Radio button when checked - outer circle */
label:has(input[type="radio"]:checked):before {
    @apply border-yellow-400 dark:border-yellow-400 border-2;
}

/* Radio button when checked - inner dot */
label:has(input[type="radio"]:checked):after {
    content: '';
    position: absolute;
    left: 0.25rem;
    top: 50%;
    transform: translateY(-50%);
    height: 0.5rem;
    width: 0.5rem;
    border-radius: 50%;
    @apply bg-yellow-400 dark:bg-yellow-400;
}

/* Focus state */
label:has(input[type="radio"]:focus-visible):before {
    @apply outline-2 outline-yellow-400 dark:outline-yellow-400 outline-offset-2;
}

/* Hover state */
label:has(input[type="radio"]:not(:disabled)):hover:before {
    @apply border-yellow-400 dark:border-yellow-400;
}

/* Responsive adjustments - Medium devices (768px and up) */
@media (min-width: 768px) {
    label:has(input[type="radio"]) {
        @apply text-[0.9375rem] w-auto flex-1;
        max-width: 25%; /* Ensure no more than 4 options per row */
    }
    
    label:has(input[type="radio"]):before {
        height: 1.25rem;
        width: 1.25rem;
    }
    
    label:has(input[type="radio"]:checked):after {
        height: 0.75rem;
        width: 0.75rem;
        left: 0.25rem;
    }
}

/* Responsive adjustments - Large devices (1024px and up) */
@media (min-width: 1024px) {
    label:has(input[type="radio"]) {
        @apply text-base pl-8;
    }
    
    label:has(input[type="radio"]):before {
        height: 1.375rem;
        width: 1.375rem;
    }
    
    label:has(input[type="radio"]:checked):after {
        height: 0.875rem;
        width: 0.875rem;
        left: 0.25rem;
    }
}
